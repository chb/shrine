//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.1.2-b01-fcs
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2010.06.15 at 09:44:57 AM EDT
//

package edu.harvard.i2b2.crc.datavo.setfinder.query;

import java.util.ArrayList;
import java.util.List;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.XmlValue;

/**
 * <p>
 * Java class for statusType complex type.
 * 
 * <p>
 * The following schema fragment specifies the expected content contained within
 * this class.
 * 
 * <pre>
 * &lt;complexType name="statusType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="condition" maxOccurs="unbounded">
 *           &lt;complexType>
 *             &lt;simpleContent>
 *               &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
 *                 &lt;attribute name="type" use="required">
 *                   &lt;simpleType>
 *                     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *                       &lt;enumeration value="ERROR"/>
 *                       &lt;enumeration value="FATAL_ERROR"/>
 *                       &lt;enumeration value="WARNING"/>
 *                       &lt;enumeration value="INFO"/>
 *                     &lt;/restriction>
 *                   &lt;/simpleType>
 *                 &lt;/attribute>
 *                 &lt;attribute name="coding_system" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *               &lt;/extension>
 *             &lt;/simpleContent>
 *           &lt;/complexType>
 *         &lt;/element>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "statusType", propOrder = { "condition" })
public class StatusType
{
    @XmlElement(required = true)
    protected List<Condition> condition;

    /**
     * Gets the value of the condition property.
     * 
     * <p>
     * This accessor method returns a reference to the live list, not a
     * snapshot. Therefore any modification you make to the returned list will
     * be present inside the JAXB object. This is why there is not a
     * <CODE>set</CODE> method for the condition property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * 
     * <pre>
     * getCondition().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link edu.harvard.i2b2.crc.datavo.setfinder.query.StatusType.Condition }
     * 
     * 
     */
    public List<Condition> getCondition()
    {
        if(condition == null)
        {
            condition = new ArrayList<Condition>();
        }
        return condition;
    }

    /**
     * <p>
     * Java class for anonymous complex type.
     * 
     * <p>
     * The following schema fragment specifies the expected content contained
     * within this class.
     * 
     * <pre>
     * &lt;complexType>
     *   &lt;simpleContent>
     *     &lt;extension base="&lt;http://www.w3.org/2001/XMLSchema>string">
     *       &lt;attribute name="type" use="required">
     *         &lt;simpleType>
     *           &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
     *             &lt;enumeration value="ERROR"/>
     *             &lt;enumeration value="FATAL_ERROR"/>
     *             &lt;enumeration value="WARNING"/>
     *             &lt;enumeration value="INFO"/>
     *           &lt;/restriction>
     *         &lt;/simpleType>
     *       &lt;/attribute>
     *       &lt;attribute name="coding_system" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
     *     &lt;/extension>
     *   &lt;/simpleContent>
     * &lt;/complexType>
     * </pre>
     * 
     * 
     */
    @XmlAccessorType(XmlAccessType.FIELD)
    @XmlType(name = "", propOrder = { "value" })
    public static class Condition
    {

        @XmlValue
        protected String value;
        @XmlAttribute(required = true)
        protected String type;
        @XmlAttribute(name = "coding_system", required = true)
        protected String codingSystem;

        /**
         * Gets the value of the value property.
         * 
         * @return possible object is {@link String }
         * 
         */
        public String getValue()
        {
            return value;
        }

        /**
         * Sets the value of the value property.
         * 
         * @param value
         *            allowed object is {@link String }
         * 
         */
        public void setValue(final String value)
        {
            this.value = value;
        }

        /**
         * Gets the value of the type property.
         * 
         * @return possible object is {@link String }
         * 
         */
        public String getType()
        {
            return type;
        }

        /**
         * Sets the value of the type property.
         * 
         * @param value
         *            allowed object is {@link String }
         * 
         */
        public void setType(final String value)
        {
            type = value;
        }

        /**
         * Gets the value of the codingSystem property.
         * 
         * @return possible object is {@link String }
         * 
         */
        public String getCodingSystem()
        {
            return codingSystem;
        }

        /**
         * Sets the value of the codingSystem property.
         * 
         * @param value
         *            allowed object is {@link String }
         * 
         */
        public void setCodingSystem(final String value)
        {
            codingSystem = value;
        }

        @Override
        public int hashCode()
        {
            final int prime = 31;
            int result = 1;
            result = prime * result + ((codingSystem == null) ? 0 : codingSystem.hashCode());
            result = prime * result + ((type == null) ? 0 : type.hashCode());
            result = prime * result + ((value == null) ? 0 : value.hashCode());
            return result;
        }

        @Override
        public boolean equals(final Object obj)
        {
            if(this == obj)
            {
                return true;
            }
            if(obj == null)
            {
                return false;
            }
            if(getClass() != obj.getClass())
            {
                return false;
            }
            final Condition other = (Condition) obj;
            if(codingSystem == null)
            {
                if(other.codingSystem != null)
                {
                    return false;
                }
            }
            else if(!codingSystem.equals(other.codingSystem))
            {
                return false;
            }
            if(type == null)
            {
                if(other.type != null)
                {
                    return false;
                }
            }
            else if(!type.equals(other.type))
            {
                return false;
            }
            if(value == null)
            {
                if(other.value != null)
                {
                    return false;
                }
            }
            else if(!value.equals(other.value))
            {
                return false;
            }
            return true;
        }

        @Override
        public String toString()
        {
            return "Condition [value=" + value + ", type=" + type + ", codingSystem=" + codingSystem + "]";
        }
    }

    @Override
    public int hashCode()
    {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((condition == null) ? 0 : condition.hashCode());
        return result;
    }

    @Override
    public boolean equals(final Object obj)
    {
        if(this == obj)
        {
            return true;
        }
        if(obj == null)
        {
            return false;
        }
        if(getClass() != obj.getClass())
        {
            return false;
        }
        final StatusType other = (StatusType) obj;
        if(condition == null)
        {
            if(other.condition != null)
            {
                return false;
            }
        }
        else if(!condition.equals(other.condition))
        {
            return false;
        }
        return true;
    }

    @Override
    public String toString()
    {
        return "StatusType [condition=" + condition + "]";
    }
}
