<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <context:component-scan base-package="net.shrine.webclient.server"/>
    <context:property-override ignore-resource-not-found="false" location="classpath:webclient.properties"/>

    <jee:jndi-lookup id="pmEndpoint" jndi-name="java:comp/env/shrine/pmEndpoint"
            default-value="http://services.i2b2.org/i2b2/rest/PMService/getServices"/>
    <jee:jndi-lookup id="shrineUrl" jndi-name="java:comp/env/shrine/shrineUrl"
            default-value="https://shrine-dev1.chip.org:6060/shrine-cell/rest/"/>
    <jee:jndi-lookup id="projectId" jndi-name="java:comp/env/shrine/projectId"
            default-value="SHRINE"/>
    <jee:jndi-lookup id="acceptAllCerts" jndi-name="java:comp/env/shrine/acceptAllCerts"
            default-value="false"/>

    <bean name="shrineClient" class="net.shrine.webclient.server.RequestScopedShrineClient" factory-method="apply" scope="request">
        <aop:scoped-proxy/>
        <constructor-arg index="0" ref="shrineUrl"/>
        <constructor-arg index="1" ref="projectId"/>
        <constructor-arg index="2" ref="acceptAllCerts"/>
    </bean>

    <!--FIXME - figure out if we can do this with component scanning-->
    <bean name="ontService" class="net.shrine.webclient.server.OntologyServiceImpl"/>
    <bean name="boostrapInfoSource" class="net.shrine.webclient.server.SpringSecurityBootstrapInfoSource"/>


    <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="pmAuthProvider"/>
    </sec:authentication-manager>

    <bean name="authFilter" class="net.shrine.webclient.server.DomainUsernamePasswordAuthenticationProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
    </bean>

    <bean name="pmAuthProvider" class="net.shrine.webclient.server.PMAuthenticationProvider">
        <constructor-arg ref="pmEndpoint"/>
    </bean>

    <bean name="logoutHandler" class="org.springframework.security.web.authentication.logout.SimpleUrlLogoutSuccessHandler">
        <property name="targetUrlParameter" value="target"/>
    </bean>

    <sec:http auto-config="false" entry-point-ref="authenticationProcessingFilterEntryPoint">
        <sec:custom-filter ref="authFilter" position="FORM_LOGIN_FILTER"/>
        <sec:intercept-url pattern="/favicon.ico" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/login.html" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
        <sec:intercept-url pattern="/**" access="ROLE_USER"/>
        <sec:logout success-handler-ref="logoutHandler"/>
    </sec:http>

    <bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg index="0" value="/login.html"/>
        <property name="forceHttps" value="false"/>
    </bean>
</beans>