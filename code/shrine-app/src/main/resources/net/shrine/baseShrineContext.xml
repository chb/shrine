<?xml version="1.0" encoding="UTF-8"?><!--suppress JdkProxiedBeanTypeInspection, InjectionValueTypeInspection -->
<beans xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxws="http://cxf.apache.org/jaxws" 
       xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
            http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd
            http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd">

    <import resource="classpath:META-INF/cxf/cxf.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-extension-soap.xml"/>
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

    <context:component-scan base-package="net.shrine"/>

    <!--define default properties and JNDI name that will override them-->
    <jee:jndi-lookup id="pmEndpoint" jndi-name="java:comp/env/shrine/pmEndpoint"
                     default-value="http://services.i2b2.org/i2b2/rest/PMService/getServices"/>
    <jee:jndi-lookup id="realCRCEndpoint" jndi-name="java:comp/env/shrine/realCRCEndpoint"
                     default-value="http://services.i2b2.org/i2b2/rest/QueryToolService/"/>
	<jee:jndi-lookup id="spinEntrypoint" jndi-name="java:comp/env/shrine/spinEntrypoint"
                     default-value="http://localhost:8080/shrine/soap/aggregate?wsdl"/>
	<jee:jndi-lookup id="spinEndpointType" jndi-name="java:comp/env/shrine/spinEntrypointType"
                     default-value="SOAP"/>
    <jee:jndi-lookup id="aggregatorEndpoint" jndi-name="java:comp/env/shrine/aggregatorEndpoint"
                     default-value="http://localhost:8080/shrine/soap/aggregate?wsdl"/>
    <jee:jndi-lookup id="aggregatorEndpointType" jndi-name="java:comp/env/shrine/aggregatorEndpointType"
                     default-value="SOAP"/>
    <jee:jndi-lookup id="shrineEndpoint" jndi-name="java:comp/env/shrine/shrineEndpoint"
                     default-value="http://localhost:8080/shrine/soap/"/>
    <jee:jndi-lookup id="sheriffEndpoint" jndi-name="java:comp/env/shrine/sheriffEndpoint"
                     default-value="http://localhost:8080/shrine-hms-authorization/queryAuthorization"/>
    <jee:jndi-lookup id="sheriffUsername" jndi-name="java:comp/env/shrine/sheriffUsername" default-value="service"/>
    <jee:jndi-lookup id="sheriffPassword" jndi-name="java:comp/env/shrine/sheriffPassword" default-value="service"/>
    <jee:jndi-lookup id="broadcasterPeerGroupToQuery" jndi-name="java:comp/env/shrine/broadcasterPeerGroupToQuery"
                     default-value="LOCAL"/>
    <jee:jndi-lookup id="humanReadableNodeName" jndi-name="java:comp/env/shrine/humanReadableNodeName"
                     default-value="SHRINE Cell"/>
    <jee:jndi-lookup id="i2b2HiveDomain" jndi-name="java:comp/env/shrine/i2b2HiveDomain" default-value="HarvardDemo"/>
    <jee:jndi-lookup id="i2b2HiveUsername" jndi-name="java:comp/env/shrine/i2b2HiveUsername" default-value="demo"/>
    <jee:jndi-lookup id="i2b2HiveProject" jndi-name="java:comp/env/shrine/i2b2HiveProject" default-value="Demo"/>
    <jee:jndi-lookup id="i2b2HivePassword" jndi-name="java:comp/env/shrine/i2b2HivePassword" default-value="demouser"/>
    <jee:jndi-lookup id="setSizeObfuscation" jndi-name="java:comp/env/shrine/setSizeObfuscation" default-value="true"/>
    <jee:jndi-lookup id="isAdapter" jndi-name="java:comp/env/shrine/isAdapter" default-value="true"/>
    <jee:jndi-lookup id="isBroadcaster" jndi-name="java:comp/env/shrine/isBroadcaster" default-value="true"/>
    <jee:jndi-lookup id="isIncludeAggregateResults" jndi-name="java:comp/env/shrine/isIncludeAggregateResults"
                     default-value="false"/>
    <jee:jndi-lookup id="adapterLockoutAttemptsThreshold"
                     jndi-name="java:comp/env/shrine/adapterLockoutAttemptsThreshold" default-value="10"/>
    <jee:jndi-lookup id="queryTTL" jndi-name="java:comp/env/shrine/queryTTL" default-value="270000"/>
    <jee:jndi-lookup id="adapterStatusQuery" jndi-name="java:comp/env/shrine/adapterStatusQuery"
                     default-value="\\SHRINE\SHRINE\Diagnoses\Mental Illness\Disorders usually diagnosed in infancy, childhood, or adolescence\Pervasive developmental disorders\Infantile autism, current or active state\"/>
    <jee:jndi-lookup id="adapterMappingsFileName" jndi-name="java:comp/env/shrine/adapterMappingsFileName" default-value="AdapterMappings.xml"/>                     
    <jee:jndi-lookup id="shouldTrustAllSslCerts" jndi-name="java:comp/env/shrine/shouldTrustAllSslCerts" default-value="false"/>
    <jee:jndi-lookup id="shrineDatabaseType" jndi-name="java:comp/env/shrine/shrineDatabaseType" default-value="mysql"/>

    <bean id="aggregatorEndpointTypeEnumValue" class="org.spin.tools.config.EndpointType" factory-method="valueOf">
        <constructor-arg ref="aggregatorEndpointType"/>
    </bean>
    
    <bean id="spinEntrypointTypeEnumValue" class="org.spin.tools.config.EndpointType" factory-method="valueOf">
        <constructor-arg ref="spinEntrypointType"/>
    </bean>
    
    <bean id="aggregatorEndpointConfigMaker" class="net.shrine.spring.EndpointConfigMaker">
		<constructor-arg ref="aggregatorEndpointTypeEnumValue"/>
	</bean>
	
	<bean id="spinEntrypointEndpointConfigMaker" class="net.shrine.spring.EndpointConfigMaker">
		<constructor-arg ref="spinEntrypointTypeEnumValue"/>
	</bean>

    <bean id="aggregatorEndpointOption" class="scala.Option" factory-method="apply">
    	<constructor-arg ref="aggregatorEndpoint"/>
    </bean>
    
    <bean id="spinEntrypointEndpointConfig" factory-bean="spinEntrypointEndpointConfigMaker" factory-method="apply">
    	<constructor-arg ref="spinEntrypoint"/>
    </bean>

	<bean id="aggregatorEndpointConfigOption" factory-bean="aggregatorEndpointOption" factory-method="map">
		<constructor-arg ref="endpointConfigMaker"/>
	</bean>
	
	<bean id="aggregatorEndpointConfig" factory-bean="aggregatorEndpointConfigOption" factory-method="orNull"/>
	
	<!-- Hack to get None, for reverse-broadcast-order aggregation -->
	<!-- 
	<bean id="aggregatorEndpointConfigOption" class="scala.Option" factory-method="apply">
		<constructor-arg>
			<null/>
		</constructor-arg>
	</bean>
	-->

    <bean id="httpClient" class="net.shrine.util.JerseyHttpClient">
      <constructor-arg ref="shouldTrustAllSslCerts"/>
    </bean>

    <bean id="hiveCredentials" class="net.shrine.config.HiveCredentials">
        <constructor-arg ref="i2b2HiveDomain"/>
        <constructor-arg ref="i2b2HiveUsername"/>
        <constructor-arg ref="i2b2HivePassword"/>
        <constructor-arg ref="i2b2HiveProject"/>
    </bean>

	<bean id="happyShrineConfig" class="net.shrine.config.HappyShrineConfig">
		<constructor-arg index="0" ref="isAdapter"/>
		<constructor-arg index="1" ref="pmEndpoint"/>
		<constructor-arg index="2" ref="broadcasterPeerGroupToQuery"/>
		<constructor-arg index="3" ref="adapterStatusQuery"/>
	</bean>

	<bean id="spinPollingFrequency" class="java.lang.Float" factory-method="valueOf">
		<constructor-arg>
			<!-- Use higher value - 5Hz instead of 1Hz - for more responsive network queries -->
			<value>5.0F</value>
		</constructor-arg>
	</bean>

    <bean id="agentConfig" class="org.spin.tools.config.AgentConfig">
    	<constructor-arg index="0" ref="aggregatorEndpointConfig"/>
    	<constructor-arg index="1" ref="spinEntrypointEndpointConfig"/>
    	<constructor-arg index="2" ref="broadcasterPeerGroupToQuery"/>
    	<constructor-arg index="3"><null/></constructor-arg>
    	<constructor-arg index="4" ref="queryTTL"/>
    	<constructor-arg index="5" ref="spinPollingFrequency"/>
    </bean>

	<!-- 5 seconds, Spin's default -->
	<bean id="broadcasterTimeoutPeriod" class="org.spin.tools.Interval" factory-method="seconds">
		<constructor-arg value="5"/>
	</bean>

    <bean id="nodeConfig" class="org.spin.tools.config.NodeConfig">
    	<constructor-arg index="0" ref="humanReadableNodeName"/>
    	<constructor-arg index="1" value="false"/>
    	<constructor-arg index="2" ref="isBroadcaster"/>
    	<constructor-arg index="3" ref="isBroadcaster"/>
    	<constructor-arg index="4" ref="isAdapter"/>
    	<constructor-arg index="5"><null/></constructor-arg>
    	<constructor-arg index="6" value="3600000" />
    	<constructor-arg index="7" value="3600000" />
    	<constructor-arg index="8" ref="broadcasterTimeoutPeriod"/>
    	<constructor-arg index="9" value="net.shrine.adapter.query.ShrineQueryActionMap"/>
    	<constructor-arg index="10"><null/></constructor-arg>
    </bean>

    <bean id="spinClient" class="org.spin.client.Agent">
        <constructor-arg index="0" ref="agentConfig"/>
    </bean>

    <bean id="spinNode" class="org.spin.node.SpinNodeImpl">
        <constructor-arg ref="shrineQueryActionMap"/>
        <constructor-arg ref="nodeConfig"/>
    </bean>

    <jaxws:endpoint id="spinNodeEndpoint" implementor="#spinNode" address="/aggregate">
    </jaxws:endpoint>

    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/shrineDB"/>
    </bean>

    <bean id="slickDatabase" class="scala.slick.session.Database" factory-method="forDataSource">
        <constructor-arg ref="dataSource"/>
    </bean>
    
    <bean id="slickSpringWorkarounds" class="net.shrine.dao.slick.workarounds.SpringWorkarounds">
        <constructor-arg ref="shrineDatabaseType"/>
    </bean>
    
    <bean id="slickDriver" factory-bean="slickSpringWorkarounds" factory-method="driver"/>
    
    <bean id="slickTables" class="net.shrine.adapter.dao.slick.tables.Tables">
    	<constructor-arg ref="slickDriver"/>
    </bean>

    <bean id="slickBroadcasterAuditTables" class="net.shrine.broadcaster.dao.slick.tables.Tables">
    	<constructor-arg ref="slickDriver"/>
    </bean>

    <bean id="auditDao" class="net.shrine.broadcaster.dao.slick.SlickAuditDao">
        <constructor-arg ref="slickDatabase"/>
        <constructor-arg ref="slickBroadcasterAuditTables"/>
    </bean>

    <bean id="nonTransactionalAdapterDao" class="net.shrine.adapter.dao.slick.SlickAdapterDao">
        <constructor-arg ref="slickDatabase"/>
        <constructor-arg ref="slickTables"/>
    </bean>
    
    <bean id="adapterDao" class="net.shrine.adapter.dao.AdapterDao" factory-bean="nonTransactionalAdapterDao" factory-method="transactional"/>

	<bean id="adapterMappingsSource" class="net.shrine.config.ClasspathAdapterMappingsSource">
	   <constructor-arg ref="adapterMappingsFileName"/>
	</bean>
	
	<bean id="adapterMappings" factory-bean="adapterMappingsSource" factory-method="load"/>

    <bean id="expressionTranslator" class="net.shrine.adapter.translators.ExpressionTranslator" factory-method="apply">
        <constructor-arg ref="adapterMappings"/>
    </bean>
 
    <bean id="queryDefinitionTranslator" class="net.shrine.adapter.translators.QueryDefinitionTranslator">
        <constructor-arg ref="expressionTranslator"/>
    </bean>

    <bean id="shrineQueryActionMap" class="net.shrine.adapter.query.ShrineQueryActionMap">
        <constructor-arg>
            <map>
                <entry key="QueryDefinitionRequestType" value-ref="runQueryInstanceFromQueryDefinition"/>
                <entry key="GetRequestXml" value-ref="getRequestXmlQuery"/>
                <entry key="UserRequestType" value-ref="mastersByUserQuery"/>
                <entry key="InstanceRequestType" value-ref="instancesByIDQuery"/>
                <entry key="MasterDeleteRequestType" value-ref="masterDeleteQuery"/>
                <entry key="MasterRenameRequestType" value-ref="masterRenameQuery"/>
                <entry key="GetQueryResult" value-ref="readQueryResultAdapter"/>
            </map>
        </constructor-arg>
    </bean>
    
    <bean id="runQueryInstanceFromQueryDefinition" class="net.shrine.adapter.RunQueryAdapter">
        <constructor-arg index="0" ref="realCRCEndpoint"/>
        <constructor-arg index="1" ref="httpClient"/>
        <constructor-arg index="2" ref="adapterDao"/>
        <constructor-arg index="3" ref="hiveCredentials"/>
        <constructor-arg index="4" ref="queryDefinitionTranslator"/>
        <constructor-arg index="5" ref="adapterLockoutAttemptsThreshold"/>
        <constructor-arg index="6" value="true"/>
    </bean>

    <bean id="instancesByIDQuery" class="net.shrine.adapter.ReadInstanceResultsAdapter">
    	<constructor-arg index="0" ref="realCRCEndpoint"/>
        <constructor-arg index="1" ref="httpClient"/>
        <constructor-arg index="2" ref="hiveCredentials"/>
        <constructor-arg index="3" ref="adapterDao"/>
        <constructor-arg index="4" value="true"/>
    </bean>
    
    <bean id="readQueryResultAdapter" class="net.shrine.adapter.ReadQueryResultAdapter">
        <constructor-arg index="0" ref="realCRCEndpoint"/>
        <constructor-arg index="1" ref="httpClient"/>
        <constructor-arg index="2" ref="hiveCredentials"/>
        <constructor-arg index="3" ref="adapterDao"/>
        <constructor-arg index="4" value="true"/>
    </bean>

    <bean id="mastersByUserQuery" class="net.shrine.adapter.ReadPreviousQueriesAdapter">
        <constructor-arg index="0" ref="adapterDao"/>
    </bean>

    <bean id="masterDeleteQuery" class="net.shrine.adapter.DeleteQueryAdapter">
        <constructor-arg index="0" ref="adapterDao"/>
    </bean>

    <bean id="masterRenameQuery" class="net.shrine.adapter.RenameQueryAdapter">
        <constructor-arg index="0" ref="adapterDao"/>
    </bean>

    <bean id="getRequestXmlQuery" class="net.shrine.adapter.ReadQueryDefinitionAdapter">
        <constructor-arg index="0" ref="adapterDao"/>
    </bean>
</beans>